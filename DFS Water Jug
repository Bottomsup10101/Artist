def water_jug_problem(jug1,jug2,goal):
    stack=[]
    visited=set()
    stack.append((0,0))
    
    while stack:
        current_state=stack.pop()
        x,y=current_state
        print(f"Current State is ({x},{y})")
        
        if x==goal or y==goal:
            print(f"Solution is found at State ({x},{y})")
            return True
            
        if current_state in visited:
            continue
        visited.add(current_state)
        
        states=set()
        states.add((jug1,y))
        states.add((x,jug2))
        states.add((0,y))
        states.add((x,0))
        poura_b=min(x,(jug2-y))
        states.add((x-poura_b,y+poura_b))
        pourb_a=min(y,jug1-x)
        states.add((x+pourb_a,y-pourb_a))
        
        for state in states:
            if state not in visited:
                stack.append(state)

    return False     
                
                
#Test case
jug1=4
jug2=3
goal=2

if water_jug_problem(jug1,jug2,goal):
    print("Solution Found!")
else:
    print("Solution Not Found!")
